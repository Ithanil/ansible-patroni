- name: Install patroni package
  package:
    name: patroni
    state: present

- name: Install etcd client package
  package:
    name: python3-etcd
    state: present
  when: dcs == "etcd"

- name: Install etcd3 client package
  package:
    name: python3-etcd3
    state: present
  when: dcs == "etcd3"

- name: Install vip-manager package
  package:
    name: vip-manager
    state: present
  when: dcs == "etcd"

- name: Install vip-manager2 package
  package:
    name: vip-manager2
    state: present
  when: dcs == "etcd3"

- name: Deploy patroni DCS config
  template:
    src: templates/dcs.yml
    dest: /etc/patroni/dcs.yml
    mode: 0640
    owner: "postgres"
    group: "postgres"

- name: Deploy patroni config templates
  template:
    src: templates/config.yml.in
    dest: /etc/patroni/config.yml.in
    mode: 0640
    owner: "postgres"
    group: "postgres"

- name: Create patroni configuration
  command: pg_createconfig_patroni --force --hostip={{ ansible_default_ipv4.address }} --port={{ postgresql_port }} --vip={{ vip }} --endpoint=http://{{ ansible_default_ipv4.address }}:2379 {{ postgresql_major_version }} {{ postgresql_cluster_name }}

- name: systemctl daemon-reload / start patroni
  systemd:
    daemon_reload: yes
    name: patroni@{{ postgresql_major_version }}-{{ postgresql_cluster_name }}
    state: restarted
    enabled: yes

- name: systemctl daemon-reload / start vip-manager
  systemd:
    daemon_reload: yes
    name: vip-manager@{{ postgresql_major_version }}-{{ postgresql_cluster_name }}
    state: restarted
    enabled: yes
